<?php

namespace florian\BlogBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;//Permet d'exécuter la requête pour notre pagination et va ainsi récupérer nos article nécessaire

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
     //Fonction qui va retourner nos article 
    public function myFindArticleRecent($nombreParPage, $page)
    {
        //avec le paginator, la version '$this->_em->createQueryBuilder()->select('a')' ne marche pas
        $createQueryBuilder = $this->createQueryBuilder('a')
                                          ->orderBy('a.dateCreation', 'DESC')
                                      ->setFirstResult(($page-1) * $nombreParPage)
                                               // Ainsi que le nombre d'articles à afficher
                                           ->setMaxResults($nombreParPage);

        $query = $createQueryBuilder->getQuery();

        return new Paginator($query);// La construction de la requête reste inchangée
    }
    
    /**
     * @param string $slugTitre
     * @return Article
     * 
     * 
     */
    public function myFindOneSlugTitre($slugTitre)
    {
        $createQueryBuilder  = $this->_em->createQueryBuilder()->select('a')
                                                                ->from('florianBlogBundle:Article', 'a')
                                                                ->where('a.slugTitre = :slugTitre')
                                                                 ->setParameter('slugTitre', $slugTitre);
        $query = $createQueryBuilder->getQuery();
        
        //Resultat ne doit retourner qu'une valeur sinon il y a une erreur
        $resultat = $query->getSingleResult();  
        
        return $resultat;
        
    }
}
